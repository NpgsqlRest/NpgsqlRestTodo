{
    "version": "2.0.0",
    "tasks": [

        // bun commands (_ prefix to group them at the top of the list)
        { "label": "bun-install", "type": "shell", "command": "bun install" }, 
        { "label": "bun-upgrade", "type": "shell", "command": "bun upgrade" }, 
        { "label": "bun-upgrade-packages", "type": "shell", "command": "bun run upgrade" }, 
        
        // app (frontend) commands (requires bun install)
        { "label": "app-build", "type": "shell", "command": "bun run build" }, // minimized build
        { "label": "app-watch", "type": "shell", "command": "bun run watch" }, // watch for changes 
        { "label": "app-refresh", "type": "shell", "command": "bun run refresh" }, // regenerate auto generated source file (must have npgsqlrest running in dev mode)

        // db (database) commands (requires bun install and postgresql client tools to run psql)
        { "label": "db-test", "type": "shell", "command": "bun run db-test" }, // runs tests scripts
        { "label": "db-up", "type": "shell", "command": "bun run db-up" }, // migrations up
        { "label": "db-list", "type": "shell", "command": "bun run db-list" }, // list migrations
        { "label": "db-dump", "type": "shell", "command": "bun run db-dump" }, // migration schema dump
        { "label": "db-schema", "type": "shell", "command": "bun run db-schema" }, // entire schema dump
        { "label": "db-history", "type": "shell", "command": "bun run db-history" }, // migration history
        { "label": "db-config", "type": "shell", "command": "bun run db-config" }, // migrations current config
        { "label": "db-psql", "type": "shell", "command": "bun run psql" }, // run psql tool (requires .env file)
        
        // local docker commands, local docker runs backend only (postgres, migrations up and npgsqlrest in dev mode to generate source code), use bun to build pr watch app
        { "label": "dockerlocal-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.local.yml -p npgsqlresttodo up" }, 
        { "label": "dockerlocal-build", "type": "shell", "command": "docker compose -f ./config/docker-compose.local.yml -p npgsqlresttodo up --build"}, 
        { "label": "dockerlocal-up-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.local.yml -p npgsqlresttodo up -d"}, 
        { "label": "dockerlocal-build-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.local.yml -p npgsqlresttodo up --build -d"}, 
        
        // dev docker commands, dev docker runs backend and frontend (postgres, migrations up, npgsqlrest in dev mode to generate source code and app in watch mode)
        { "label": "dockerdev-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up" }, 
        { "label": "dockerdev-build", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up --build"}, 
        { "label": "dockerdev-up-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up -d"}, 
        { "label": "dockerdev-build-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up --build -d"}, 

        // prod docker commands, prod docker runs backend and frontend (postgres, migrations up, npgsqlrest without source gen, and app in minimaze build mode)
        { "label": "dockerprod-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up" }, 
        { "label": "dockerprod-build", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up --build"}, 
        { "label": "dockerprod-up-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up -d"}, 
        { "label": "dockerprod-build-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up --build -d"}, 
        
        // docker database commands, runs only database service
        { "label": "dockerdb-dev-service-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up postgres-dev" }, 
        { "label": "dockerdb-dev-service-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo up -d postgres-dev" }, 
        { "label": "dockerdb-prod-service-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up postgres-prod" }, 
        { "label": "dockerdb-prod-service-detach", "type": "shell", "command": "docker compose -f ./config/docker-compose.prod.yml -p npgsqlresttodo up -d postgres-prod" }, 

        // run database migrations commands in docker, no install required, just docker
        { "label": "dockermigrations-up", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations up' pgmigrations" }, 
        { "label": "dockermigrations-list", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations up --list' pgmigrations" }, 
        { "label": "dockermigrations-dump", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations up --dump' pgmigrations" }, 
        { "label": "dockermigrations-schema", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations schema' pgmigrations" }, 
        { "label": "dockermigrations-history", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations history' pgmigrations" }, 
        { "label": "dockermigrations-config", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations config' pgmigrations" }, 
        { "label": "dockermigrations-psql", "type": "shell", "command": "docker compose -f ./config/docker-compose.dev.yml -p npgsqlresttodo run --entrypoint 'pgmigrations psql' pgmigrations" }, 
    ]
}

